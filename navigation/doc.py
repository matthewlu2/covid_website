import streamlit as st

from texts.descriptions import Desc
from texts.case_study import CaseStudy
from .home import TITLE
import hydralit_components as hc


option_data = [
   {'icon': "", 'label':i} for i in ['Introduction', 'Model Overview', 'Database Implementation', 'Case Study']]

over_theme = {'txc_inactive': 'black','menu_background':'white','txc_active':'white','option_active':'green'}
font_fmt = {'font-class':'h3','font-size':'50%'}


def doc_page():
    page = hc.option_bar(
        option_definition=option_data,
        title='',
        override_theme=over_theme,
        # font_styling=font_fmt,
        horizontal_orientation=True)
    
    if page == 'Introduction':
        st.markdown('#### Overview of the COVID-19db linkage maps of cell surface proteins and transcription factors in immune cells workflow and features')
        st.markdown(f"<p style='text-align: justify; color: black;'>{Desc.manuscript_intro}</h4>", unsafe_allow_html=True)  
        _, m, _ = st.columns([0.1, 1, 0.1])
        m.image('./assets/images/documentation2.png')


    elif page == 'Case Study':
        # st.image('./assets/images/under_construction.png')  
        CaseStudy()
                
    elif page == 'Usage':
        st.caption(f'Example usage of the {TITLE}')
        video_file = open('./assets/video/video.mp4', 'rb')
        video_bytes = video_file.read()
        st.video(video_bytes)
        
    elif page == 'Model Overview':
        st.markdown("#### Cell-type specific SPaRTAN models")
        st.markdown(f"<p style='text-align: justify; color: black;'>{Desc.model_overview}</h4>", unsafe_allow_html=True)          
        st.image('./assets/images/spartan_model2.png')
        st.write('We also have a book chapter to explain and demo how to use SPaRTAN framework at https://link.springer.com/protocol/10.1007/978-1-0716-3163-8_11')
        
    elif page == 'Database Implementation':
        st.image('./assets/logos/tech.png')
        st.markdown('#### Backend implementation')
        st.write("""
        We build the COVID-19db of Immune Cell States web portal to present the analysis results in a user-friendly way. All the processed and annotated datasets can be searched, visualized and downloaded from the web portal. The backend of the portal was implemented in Python (version: 3.9.13), while the frontend is written in TypeScript via the Streamlit open-source framework. All the charts are generated by in-house Python and R scripts. All the functions of the database have been tested in Google Chrome and Apple Safari browsers. Static figures and logos were made using Biorender.
        """)
        
        st.markdown('---')
        st.markdown("#### Statistical analysis and visualization")
        st.write(Desc.analysis)
        
        st.markdown('---')
        st.markdown("#### Cell-type specific SPaRTAN models")
        st.write(Desc.doc_spartan)
        
        st.markdown('---')
        st.markdown("#### LitCovid")
        st.write("Literrature reference were downloaded from LitCovid (https://www.ncbi.nlm.nih.gov/research/coronavirus/) and filtered for association with TFs and surface proteins in our datasets. The database currently contains 302,986 articles that grow daily, making it a comprehensive, up-to-date resource for COVID-19 researchers")
        
        st.markdown('---')
        st.markdown("#### StringDB")
        st.write("To provide a visual model of high-confidence genes that interact with TFs and surface proteins of interest, the protein-protein interaction (PPI) network derived from the STRING database (StringDB) (confidence score > 400) that contains protein-PPIs from experimental and computational sources. Using the StringDB native application programming interface (API), we queried the database for interactions involving selected TFs or surface proteins using the Python requests library. The number of interactors can be manually set by the user on the PPI tab. The width of the edges corresponds to StringDB  scores. Only connected nodes are plotted.")
        
        st.markdown('---')        
        st.markdown('#### Code Availability')
        st.write('All the code for the database are available at https://github.com/osmanbeyoglulab/covid19_webapp')
        st.write("""Apache License 2.0""")
        
        st.markdown('---')
        st.markdown("#### Funding")
        st.write("""This study was funded by support from the National Institutes of Health (R35GM146989).""")
        
    
        